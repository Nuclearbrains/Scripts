-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local I1iillllI111ilIIill = assert local li1i1i1lili1III1I1I = select local lIlllIliii11IIlIi1I = tonumber local Iii1IIlIli1iiii1II1 = unpack local llI1lilIiiIli1lIIll = pcall local i1llI11llll1i1I1ll1 = setfenv local IIiillI1IiII11Iill1 = setmetatable local lIl1I1I1l1liili1iIliI = type local ll1lliIII1illliIlIl = getfenv local lIl11IIiIIl11lllI1IIi = tostring local iiliIllIIlllllI1ill = error local i11IIiIIl111IlIiIll = string.sub local IilliIIliII1IiIIi11 = string.byte local liilI11iIl1iliiI1ii = string.char local I11i1IIll1Ili1IiiiI = string.rep local iilli11I1l1II11iili = string.gsub local I1l11iIlliil11iliii = string.match local lIl1i1i1lil1llii1IiII = table.insert local iiiiillllIl1liIiiI1 = IilliIIliII1IiIIi11("c", 1) local iillI1i1i1111ii1iil, lIlIl1liI11l1i1li111l = #{2865}, #{ 4850, 1975, 4746, 4073, 627, 4079, 6191, 5166, 6485, 5754, 4609, 3149, 5911, 3838, 2984, 383, 4765, 641, 6502, 3180 } + iiiiillllIl1liIiiI1 + 130952 local lIlllIlI11Ili1IIi1I11 = {} local lIlll1i11ll11llIii1II = 1 local IilIill1llliII1IIII, liiilIlli11lIl1I11l local function IIllI111ilIliIli1ii(Iii11II1lil1l1111lI, Ii1llI1I1lIliI1lIII) local i1IiIi1IliiI11lIl11 Iii11II1lil1l1111lI = iilli11I1l1II11iili(i11IIiIIl111IlIiIll(Iii11II1lil1l1111lI, 5), "..", function(lii11i1iIIllilIlIiI) if IilliIIliII1IiIIi11(lii11i1iIIllilIlIiI, 2) == 72 then i1IiIi1IliiI11lIl11 = lIlllIliii11IIlIi1I(i11IIiIIl111IlIiIll(lii11i1iIIllilIlIiI, 1, 1)) return "" else local lIIiIIli1i1liliiIi1 = liilI11iIl1iliiI1ii(lIlllIliii11IIlIi1I(lii11i1iIIllilIlIiI, 16)) if i1IiIi1IliiI11lIl11 then local lIlIiIlIiIIII1i1IIIiI = I11i1IIll1Ili1IiiiI(lIIiIIli1i1liliiIi1, i1IiIi1IliiI11lIl11) i1IiIi1IliiI11lIl11 = nil return lIlIiIlIiIIII1i1IIIiI else return lIIiIIli1i1liliiIi1 end end end) local function Ii1i1lI11ll11ii1l1I() local Ill1liII11I11Ii1iII = IilliIIliII1IiIIi11(Iii11II1lil1l1111lI, lIlll1i11ll11llIii1II, lIlll1i11ll11llIii1II) lIlll1i11ll11llIii1II = lIlll1i11ll11llIii1II + 1 return Ill1liII11I11Ii1iII end local function i1iil1liIi1IlliI11I() local Ill1liII11I11Ii1iII, lIIiIIli1i1liliiIi1, lIlIiIlIiIIII1i1IIIiI, iiliIlil1Il1I1lIllI = IilliIIliII1IiIIi11(Iii11II1lil1l1111lI, lIlll1i11ll11llIii1II, lIlll1i11ll11llIii1II + 3) lIlll1i11ll11llIii1II = lIlll1i11ll11llIii1II + 4 return iiliIlil1Il1I1lIllI * 16777216 + lIlIiIlIiIIII1i1IIIiI * 65536 + lIIiIIli1i1liliiIi1 * 256 + Ill1liII11I11Ii1iII end local function lIli1IliI1lilIlli1l1I(lIl1IiIlIilIlII1il11l, lIll11Ilili1Iil1li111, iiiill1llliiiIIl1Il) if iiiill1llliiiIIl1Il then local ili1i1l11iIIl1li1ll, llilllI11IIl1lil1II = 0, 0 for iiII1Ilii1ii1I1IiIi = lIll11Ilili1Iil1li111, iiiill1llliiiIIl1Il do ili1i1l11iIIl1li1ll = ili1i1l11iIIl1li1ll + 2 ^ llilllI11IIl1lil1II * lIli1IliI1lilIlli1l1I(lIl1IiIlIilIlII1il11l, iiII1Ilii1ii1I1IiIi) llilllI11IIl1lil1II = llilllI11IIl1lil1II + 1 end return ili1i1l11iIIl1li1ll else local l1liIl1ilili1Ii11Il = 2 ^ (lIll11Ilili1Iil1li111 - 1) return l1liIl1ilili1Ii11Il <= lIl1IiIlIilIlII1il11l % (l1liIl1ilili1Ii11Il + l1liIl1ilili1Ii11Il) and 1 or 0 end end local function lIIiiIiil1il1liIll1() local Ill1liII11I11Ii1iII, lIIiIIli1i1liliiIi1 = i1iil1liIi1IlliI11I(), i1iil1liIi1IlliI11I() if Ill1liII11I11Ii1iII == 0 and lIIiIIli1i1liliiIi1 == 0 then return 0 end return (-2 * lIli1IliI1lilIlli1l1I(lIIiIIli1i1liliiIi1, 32) + 1) * 2 ^ (lIli1IliI1lilIlli1l1I(lIIiIIli1i1liliiIi1, 21, 31) - 1023) * ((lIli1IliI1lilIlli1l1I(lIIiIIli1i1liliiIi1, 1, 20) * 4294967296 + Ill1liII11I11Ii1iII) / 4503599627370496 + 1) end local II1IIliiii1l1llilii = bit or bit32 local lIliiliillII1I1lllI11 = II1IIliiii1l1llilii and II1IIliiii1l1llilii.bxor or function(Ill1liII11I11Ii1iII, lIIiIIli1i1liliiIi1) local liiliili1IIllliilil = 1 local lIlIiIlIiIIII1i1IIIiI = 0 while Ill1liII11I11Ii1iII > 0 and lIIiIIli1i1liliiIi1 > 0 do local lliliiiIliIIi1iii11 = Ill1liII11I11Ii1iII % 2 local lIl1lIl11iIi1Iiil1l11 = lIIiIIli1i1liliiIi1 % 2 if lliliiiIliIIi1iii11 ~= lIl1lIl11iIi1Iiil1l11 then lIlIiIlIiIIII1i1IIIiI = lIlIiIlIiIIII1i1IIIiI + liiliili1IIllliilil end Ill1liII11I11Ii1iII = (Ill1liII11I11Ii1iII - lliliiiIliIIi1iii11) / 2 lIIiIIli1i1liliiIi1 = (lIIiIIli1i1liliiIi1 - lIl1lIl11iIi1Iiil1l11) / 2 liiliili1IIllliilil = liiliili1IIllliilil * 2 end if Ill1liII11I11Ii1iII < lIIiIIli1i1liliiIi1 then Ill1liII11I11Ii1iII = lIIiIIli1i1liliiIi1 end while Ill1liII11I11Ii1iII > 0 do local lliliiiIliIIi1iii11 = Ill1liII11I11Ii1iII % 2 if lliliiiIliIIi1iii11 > 0 then lIlIiIlIiIIII1i1IIIiI = lIlIiIlIiIIII1i1IIIiI + liiliili1IIllliilil end Ill1liII11I11Ii1iII = (Ill1liII11I11Ii1iII - lliliiiIliIIi1iii11) / 2 liiliili1IIllliilil = liiliili1IIllliilil * 2 end return lIlIiIlIiIIII1i1IIIiI end local function lIlill1IIllI1il1illIl(l1iiIiiIillllII1l1I) local lIlIliIii1IlIll1l1l1i = { IilliIIliII1IiIIi11(Iii11II1lil1l1111lI, lIlll1i11ll11llIii1II, lIlll1i11ll11llIii1II + 3) } lIlll1i11ll11llIii1II = lIlll1i11ll11llIii1II + 4 local Ill1liII11I11Ii1iII = lIliiliillII1I1lllI11(lIlIliIii1IlIll1l1l1i[1], liiilIlli11lIl1I11l) local lIIiIIli1i1liliiIi1 = lIliiliillII1I1lllI11(lIlIliIii1IlIll1l1l1i[2], liiilIlli11lIl1I11l) local lIlIiIlIiIIII1i1IIIiI = lIliiliillII1I1lllI11(lIlIliIii1IlIll1l1l1i[3], liiilIlli11lIl1I11l) local iiliIlil1Il1I1lIllI = lIliiliillII1I1lllI11(lIlIliIii1IlIll1l1l1i[4], liiilIlli11lIl1I11l) liiilIlli11lIl1I11l = (157 * liiilIlli11lIl1I11l + l1iiIiiIillllII1l1I) % 256 return iiliIlil1Il1I1lIllI * 16777216 + lIlIiIlIiIIII1i1IIIiI * 65536 + lIIiIIli1i1liliiIi1 * 256 + Ill1liII11I11Ii1iII end local function i1iIiIIliIil1llllil(lIll11iIlilII1iII1iIl) local I11IlI1i11iI1l1ilIl = i1iil1liIi1IlliI11I() local illil1ii1Iilllil111 = "" for iiII1Ilii1ii1I1IiIi = iillI1i1i1111ii1iil, I11IlI1i11iI1l1ilIl do illil1ii1Iilllil111 = illil1ii1Iilllil111 .. liilI11iIl1iliiI1ii(lIliiliillII1I1lllI11(IilliIIliII1IiIIi11(Iii11II1lil1l1111lI, lIlll1i11ll11llIii1II + iiII1Ilii1ii1I1IiIi - 1), IilIill1llliII1IIII)) IilIill1llliII1IIII = (lIll11iIlilII1iII1iIl * IilIill1llliII1IIII + 213) % 256 end lIlll1i11ll11llIii1II = lIlll1i11ll11llIii1II + I11IlI1i11iI1l1ilIl return illil1ii1Iilllil111 end IilIill1llliII1IIII = Ii1i1lI11ll11ii1l1I() liiilIlli11lIl1I11l = Ii1i1lI11ll11ii1l1I() local Il1li1IlII1iIlII1lI = {} for iiII1Ilii1ii1I1IiIi = iillI1i1i1111ii1iil, Ii1i1lI11ll11ii1l1I() do local II11Il1iIlIl1li1II1 = Ii1i1lI11ll11ii1l1I() local Ili11l1l11IIilillIl = (iiII1Ilii1ii1I1IiIi - 1) * 2 Il1li1IlII1iIlII1lI[Ili11l1l11IIilillIl] = lIli1IliI1lilIlli1l1I(II11Il1iIlIl1li1II1, 1, 4) Il1li1IlII1iIlII1lI[Ili11l1l11IIilillIl + 1] = lIli1IliI1lilIlli1l1I(II11Il1iIlIl1li1II1, 5, 8) end local function I1l1lIliiIi1iI1iil1() local liili1ll1Il1I1i1Ili = { {}, nil, {}, {}, {}, nil, nil } i1iil1liIi1IlliI11I() i1iil1liIi1IlliI11I() liili1ll1Il1I1i1Ili[7] = Ii1i1lI11ll11ii1l1I() Ii1i1lI11ll11ii1l1I() Ii1i1lI11ll11ii1l1I() Ii1i1lI11ll11ii1l1I() local lI1llliIIiiilII11lI = i1iil1liIi1IlliI11I() for iiII1Ilii1ii1I1IiIi = iillI1i1i1111ii1iil, lI1llliIIiiilII11lI do liili1ll1Il1I1i1Ili[5][iiII1Ilii1ii1I1IiIi - iillI1i1i1111ii1iil] = I1l1lIliiIi1iI1iil1() end i1iil1liIi1IlliI11I() i1iil1liIi1IlliI11I() Ii1i1lI11ll11ii1l1I() liili1ll1Il1I1i1Ili[6] = Ii1i1lI11ll11ii1l1I() i1iil1liIi1IlliI11I() liili1ll1Il1I1i1Ili[2] = Ii1i1lI11ll11ii1l1I() i1iil1liIi1IlliI11I() local lI1llliIIiiilII11lI = i1iil1liIi1IlliI11I() - (#{ 3620, 5104, 6434, 3696, 4642, 4226, 5157, 6374, 3150, 2421, 4758, 2278, 1646, 6476, 3462, 2415, 5524, 1306, 5170, 3446, 1144, 841, 613, 4164 } + iiiiillllIl1liIiiI1 + 133672) local lI1l1iIl11lIliliIll = Ii1i1lI11ll11ii1l1I() for iiII1Ilii1ii1I1IiIi = iillI1i1i1111ii1iil, lI1llliIIiiilII11lI do local Ii111iilIii11iillll local lIl1I1I1l1liili1iIliI = Ii1i1lI11ll11ii1l1I() if lIl1I1I1l1liili1iIliI == #{ 338, 1985, 2440, 6341, 2280, 2617, 5678, 3464, 150, 1035, 5668, 3465, 5654, 4502, 6060, 199, 2400, 3278, 2681, 730, 5969, 5651, 6034 } + iiiiillllIl1liIiiI1 + 7 then Ii111iilIii11iillll = Ii1i1lI11ll11ii1l1I() end if lIl1I1I1l1liili1iIliI == #{ 5442, 1704, 1703, 3787, 3623, 583, 3324, 2538, 5982, 3599, 122, 6929, 5088, 6963, 1161, 6517, 6342, 53, 2646, 1477 } + iiiiillllIl1liIiiI1 + -74 then Ii111iilIii11iillll = lIIiiIiil1il1liIll1() end if lIl1I1I1l1liili1iIliI == #{ 5451, 4004, 5530, 4127, 527, 6778, 2644, 4146, 1408, 1222, 5272, 912 } then Ii111iilIii11iillll = #{ 5593, 1672, 3907, 6374, 1997, 6951, 1946, 2961, 222, 6300, 6561, 1098, 1929, 1226, 3979, 1853, 5552, 5169, 5005, 5023, 3763, 3680 } + iiiiillllIl1liIiiI1 + 16036 == #{ 2284, 3450, 4868, 6792, 2602, 543, 4064, 5199, 534, 2144, 4320, 5801, 3414, 5214, 909, 3993, 3149, 839, 4862, 4380, 1476, 1291, 3841, 4725 } + iiiiillllIl1liIiiI1 + 122768 end if lIl1I1I1l1liili1iIliI == #{ 4353, 2640, 6890, 5569, 2823, 3931, 4999, 2480, 1192, 2886, 5649, 3917, 341, 527, 2568, 250, 4358, 2596, 3782, 4754, 1970, 63, 6540, 132 } + iiiiillllIl1liIiiI1 + 97 then Ii111iilIii11iillll = Ii1i1lI11ll11ii1l1I() end if lIl1I1I1l1liili1iIliI == #{ 5751, 5539, 4546, 6218, 216, 2277, 4876, 5970, 5077, 5718, 15, 4846, 4826, 1383, 3393, 2075, 2615, 5042, 5500, 2467, 6084, 6091, 2787, 3169 } + iiiiillllIl1liIiiI1 + 68 then Ii111iilIii11iillll = i11IIiIIl111IlIiIll(i1iIiIIliIil1llllil(#{ 934, 2514, 1426, 2308, 5252, 60, 1058, 5635, 2802, 2331, 1673, 5355, 6078, 1280, 1030, 6363, 4688, 1270, 1952, 1940, 2102, 1125, 3709 } + iiiiillllIl1liIiiI1 + -2), #{4491}) end if lIl1I1I1l1liili1iIliI == #{ 3374, 5138, 5366, 501, 450, 6953, 5018, 254, 6700, 427, 189, 5846, 3465, 1033, 3105, 2040, 189, 6910, 4427, 3085, 4250, 1503 } + iiiiillllIl1liIiiI1 + -2 then Ii111iilIii11iillll = lIIiiIiil1il1liIll1() end if lIl1I1I1l1liili1iIliI == #{ 4522, 5235, 1594, 5284, 4296, 3975, 6185, 5561, 5694, 1445, 5905, 4401, 5561, 3339, 3578, 767, 5999, 2488, 6655, 5752, 6165, 2176, 2432, 6059 } + iiiiillllIl1liIiiI1 + 81 then Ii111iilIii11iillll = i1iil1liIi1IlliI11I() end if lIl1I1I1l1liili1iIliI == #{ 4809, 2937, 6396, 4353, 2838, 3127, 4925, 6, 5172, 2027, 5837, 587, 5566, 955, 4847, 5857, 419, 293, 1242, 6036, 3480, 6509, 3719 } + iiiiillllIl1liIiiI1 + 43 then Ii111iilIii11iillll = #{ 5548, 5491, 5970, 1441, 1341, 5517, 2562, 5739, 2158, 1870, 606, 1960, 3258, 3228, 2591, 3809, 3317, 3727, 993, 2585 } + iiiiillllIl1liIiiI1 + 45834 == #{ 5548, 5491, 5970, 1441, 1341, 5517, 2562, 5739, 2158, 1870, 606, 1960, 3258, 3228, 2591, 3809, 3317, 3727, 993, 2585 } + iiiiillllIl1liIiiI1 + 45834 end if lIl1I1I1l1liili1iIliI == #{ 4866, 745, 5393, 5636, 2476, 653, 2635, 2209, 4430, 2861, 6484, 5806, 2999, 6686, 4136, 597, 358, 6889, 3508, 442, 3363, 2090, 799 } + iiiiillllIl1liIiiI1 + 48 then Ii111iilIii11iillll = i11IIiIIl111IlIiIll(i1iIiIIliIil1llllil(lI1l1iIl11lIliliIll), #{ 3265, 3417, 6055, 6689, 5798 }) end liili1ll1Il1I1i1Ili[1][iiII1Ilii1ii1I1IiIi - iillI1i1i1111ii1iil] = Ii111iilIii11iillll end local lI1llliIIiiilII11lI = i1iil1liIi1IlliI11I() for iiII1Ilii1ii1I1IiIi = iillI1i1i1111ii1iil, lI1llliIIiiilII11lI do liili1ll1Il1I1i1Ili[3][iiII1Ilii1ii1I1IiIi] = i1iil1liIi1IlliI11I() end Ii1i1lI11ll11ii1l1I() Ii1i1lI11ll11ii1l1I() local lIl1I1I1liIlliili1II1 = i1iil1liIi1IlliI11I() - (#{ 6076, 4589, 3864, 3194, 189, 4560, 1305, 2447, 3502, 1896, 3177, 5548, 3425, 6923, 90, 6938, 5132, 6031, 2387, 4065, 43 } + iiiiillllIl1liIiiI1 + 133585) local iiiIi1ll1I1iII1iIIi = Ii1i1lI11ll11ii1l1I() for iiII1Ilii1ii1I1IiIi = iillI1i1i1111ii1iil, lIl1I1I1liIlliili1II1 do local lII1l1lilill1l1IlII = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local II11Il1iIlIl1li1II1 = lIlill1IIllI1il1illIl(iiiIi1ll1I1iII1iIIi) lII1l1lilill1l1IlII[51443] = lIli1IliI1lilIlli1l1I(II11Il1iIlIl1li1II1, #{ 6324, 1849, 2947, 443, 4017, 494, 2068, 5991, 61, 5069, 1319, 3641, 6169, 1949, 2576, 2472, 6890, 2781, 563 }, #{ 5592, 2876, 2432, 3471, 1496, 1191, 1896, 6484, 4374, 6236, 2870, 3503, 1825, 3701, 2056, 6351, 4856, 2712, 2369, 6582, 491, 5495, 255, 5874 } + iiiiillllIl1liIiiI1 + -97) lII1l1lilill1l1IlII[17873] = lIli1IliI1lilIlli1l1I(II11Il1iIlIl1li1II1, #{ 6324, 1849, 2947, 443, 4017, 494, 2068, 5991, 61, 5069, 1319, 3641, 6169, 1949, 2576, 2472, 6890, 2781, 563 }, #{ 5592, 2876, 2432, 3471, 1496, 1191, 1896, 6484, 4374, 6236, 2870, 3503, 1825, 3701, 2056, 6351, 4856, 2712, 2369, 6582, 491, 5495, 255, 5874 } + iiiiillllIl1liIiiI1 + -97) lII1l1lilill1l1IlII[7] = lIli1IliI1lilIlli1l1I(II11Il1iIlIl1li1II1, #{ 2334, 2448, 6275, 2706, 1319, 2564, 6539, 1014, 6037, 1987 }, #{ 5558, 6950, 2061, 2850, 3915, 6564, 5188, 883, 852, 2293, 2594, 824, 5768, 4696, 4788, 1276, 3650, 5051 }) lII1l1lilill1l1IlII[10] = lIli1IliI1lilIlli1l1I(II11Il1iIlIl1li1II1, #{ 3985, 4773, 5795, 4282, 4136, 5088, 1043, 5771, 1291, 3391, 4704, 6118, 3222, 4337, 2262, 655, 6332, 4627, 194 }, #{ 3445, 4728, 2965, 1668, 1320, 2651, 1229, 5679, 944, 1089, 2303, 1112, 854, 1346, 1359, 1633, 5076, 6287, 6642, 2732, 615, 6135, 3833, 3338 } + iiiiillllIl1liIiiI1 + -97) lII1l1lilill1l1IlII[1] = lIli1IliI1lilIlli1l1I(II11Il1iIlIl1li1II1, #{5064}, #{ 3310, 1276, 606, 1078, 5679, 46, 826, 1942, 688, 1709, 2751, 4821, 4220, 1602, 3720, 6457, 5655, 4462 }) lII1l1lilill1l1IlII[3] = lIli1IliI1lilIlli1l1I(II11Il1iIlIl1li1II1, #{ 771, 686, 1728, 3221, 5244, 3035, 5393, 5824, 1476, 1454, 1229, 4781, 6592, 433, 2069, 5764, 5151, 4320, 1574, 1282, 1554, 2733, 1625, 4922 } + iiiiillllIl1liIiiI1 + -96, #{ 4305, 2205, 4, 5945, 45, 6724, 4708, 50, 77, 4217, 6705, 2957, 6209, 3087, 5152, 6892, 3986, 1433, 494, 682, 4371, 810 } + iiiiillllIl1liIiiI1 + -89) lII1l1lilill1l1IlII[4] = lIli1IliI1lilIlli1l1I(II11Il1iIlIl1li1II1, #{1618}, #{ 5664, 73, 3705, 5545, 6021, 2206, 4291, 3445, 3113 }) lII1l1lilill1l1IlII[130925] = lIli1IliI1lilIlli1l1I(II11Il1iIlIl1li1II1, #{ 5274, 2002, 4196, 2538, 6287, 2795, 753, 5230, 2722, 978 }, #{ 5867, 6387, 2468, 5228, 3141, 1626, 5216, 910, 997, 6641, 6722, 2122, 4204, 722, 3831, 5879, 3321, 6538 }) liili1ll1Il1I1i1Ili[4][iiII1Ilii1ii1I1IiIi] = lII1l1lilill1l1IlII end for iiII1Ilii1ii1I1IiIi = iillI1i1i1111ii1iil, lIl1I1I1liIlliili1II1 do local lII1l1lilill1l1IlII = liili1ll1Il1I1i1Ili[4][iiII1Ilii1ii1I1IiIi] local lIli1l1iiI1Iiil11I1 = Il1li1IlII1iIlII1lI[lII1l1lilill1l1IlII[3]] if lIli1l1iiI1Iiil11I1 == #{ 807, 5263, 2576 } then if 255 < lII1l1lilill1l1IlII[4] then lII1l1lilill1l1IlII[6] = true lII1l1lilill1l1IlII[2] = liili1ll1Il1I1i1Ili[1][lII1l1lilill1l1IlII[4] - 256] end if lII1l1lilill1l1IlII[7] > 255 then lII1l1lilill1l1IlII[5] = true lII1l1lilill1l1IlII[8] = liili1ll1Il1I1i1Ili[1][lII1l1lilill1l1IlII[7] - 256] end end if lIli1l1iiI1Iiil11I1 == #{2664} and 255 < lII1l1lilill1l1IlII[4] then lII1l1lilill1l1IlII[6] = true lII1l1lilill1l1IlII[2] = liili1ll1Il1I1i1Ili[1][lII1l1lilill1l1IlII[4] - 256] end if lIli1l1iiI1Iiil11I1 == #{ 5492, 4719, 2992, 4365 } then lII1l1lilill1l1IlII[9] = liili1ll1Il1I1i1Ili[1][lII1l1lilill1l1IlII[1]] end if lIli1l1iiI1Iiil11I1 == #{6805, 1646} and lII1l1lilill1l1IlII[7] > 255 then lII1l1lilill1l1IlII[5] = true lII1l1lilill1l1IlII[8] = liili1ll1Il1I1i1Ili[1][lII1l1lilill1l1IlII[7] - 256] end end return liili1ll1Il1I1i1Ili end local function l1I1Ii1I1iI1llIIl1l(liili1ll1Il1I1i1Ili, Ii1llI1I1lIliI1lIII, IIIl1Iil11iIill1il1) local iI1iii11liI11i11iIl, lIl11illIl1l1IIlI11I1 = 20, 11 local ilI1IIi111liII11iil = liili1ll1Il1I1i1Ili[4] local iiIlII111ii1Il1i1li = 7 local lIlll1il11iIIiIIII1ll = liili1ll1Il1I1i1Ili[5] local Il1lII1lll1lIllliiI = liili1ll1Il1I1i1Ili[2] local lIlillII1liiIiilll1iI = liili1ll1Il1I1i1Ili[6] local lIlillIIiI1li1lllili1 = 3 local ii11liii1liliill1ll = liili1ll1Il1I1i1Ili[3] local iI111I1lI1iIiillIli = 4 local function lIliIlIl1IlIiI1liliII(...) local lIllIi1lIiiI1l1l1II1l = 0 local iIIiIlliIiI1lIl1I1I = { Iii1IIlIli1iiii1II1({}, 1, lIlillII1liiIiilll1iI) } local lIl11lll1IiIliI1ilill = 1 local lIiiilI1lli11IIl11l = {} local i1IIIiiI1lill1I111I = {} local Ii1llI1I1lIliI1lIII = ll1lliIII1illliIlIl() local illiI1iI11li1I1i1II = { ... } local l1III1liI1IIlIIi1l1 = #illiI1iI11li1I1i1II - 1 for iiII1Ilii1ii1I1IiIi = 0, l1III1liI1IIlIIi1l1 do if iiII1Ilii1ii1I1IiIi < Il1lII1lll1lIllliiI then iIIiIlliIiI1lIl1I1I[iiII1Ilii1ii1I1IiIi] = illiI1iI11li1I1i1II[iiII1Ilii1ii1I1IiIi + 1] end end local function lIlI1Iii1iIliilIIIi1I(...) local lIlIiIlIiIIII1i1IIIiI = li1i1i1lili1III1I1I("#", ...) local iilil1111iliii1i1Il = { ... } return lIlIiIlIiIIII1i1IIIiI, iilil1111iliii1i1Il end local function Iii1i1Ii1IIl1l1II1I() while true do local liiIIllIlIiIl11i1ll = ilI1IIi111liII11iil[lIl11lll1IiIliI1ilill] local iiiIlliIIl1ilIl1iil = liiIIllIlIiIl11i1ll[3] lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill + 1 if iiiIlliIIl1ilIl1iil < 12 then if iiiIlliIIl1ilIl1iil >= 6 then if iiiIlliIIl1ilIl1iil >= 9 then if iiiIlliIIl1ilIl1iil < 10 then local lIIiIIli1i1liliiIi1, lIlIiIlIiIIII1i1IIIiI if liiIIllIlIiIl11i1ll[6] then lIIiIIli1i1liliiIi1 = liiIIllIlIiIl11i1ll[2] else lIIiIIli1i1liliiIi1 = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[4]] end if liiIIllIlIiIl11i1ll[5] then lIlIiIlIiIIII1i1IIIiI = liiIIllIlIiIl11i1ll[8] else lIlIiIlIiIIII1i1IIIiI = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[7]] end iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = lIIiIIli1i1liliiIi1 - lIlIiIlIiIIII1i1IIIiI elseif iiiIlliIIl1ilIl1iil ~= 11 then local lIIiIIli1i1liliiIi1, lIlIiIlIiIIII1i1IIIiI if liiIIllIlIiIl11i1ll[6] then lIIiIIli1i1liliiIi1 = liiIIllIlIiIl11i1ll[2] else lIIiIIli1i1liliiIi1 = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[4]] end if liiIIllIlIiIl11i1ll[5] then lIlIiIlIiIIII1i1IIIiI = liiIIllIlIiIl11i1ll[8] else lIlIiIlIiIIII1i1IIIiI = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[7]] end if lIIiIIli1i1liliiIi1 == lIlIiIlIiIIII1i1IIIiI ~= (liiIIllIlIiIl11i1ll[10] ~= 0) then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill + 1 end else iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = IIIl1Iil11iIill1il1[liiIIllIlIiIl11i1ll[4]] end elseif iiiIlliIIl1ilIl1iil < 7 then local ilIii1IIiii1II1lII1 = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[4]] local lIlIiIlIiIIII1i1IIIiI if liiIIllIlIiIl11i1ll[5] then lIlIiIlIiIIII1i1IIIiI = liiIIllIlIiIl11i1ll[8] else lIlIiIlIiIIII1i1IIIiI = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[7]] end iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10] + 1] = ilIii1IIiii1II1lII1 iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = ilIii1IIiii1II1lII1[lIlIiIlIiIIII1i1IIIiI] elseif iiiIlliIIl1ilIl1iil == 8 then local lIIiIIli1i1liliiIi1, lIlIiIlIiIIII1i1IIIiI if liiIIllIlIiIl11i1ll[6] then lIIiIIli1i1liliiIi1 = liiIIllIlIiIl11i1ll[2] else lIIiIIli1i1liliiIi1 = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[4]] end if liiIIllIlIiIl11i1ll[5] then lIlIiIlIiIIII1i1IIIiI = liiIIllIlIiIl11i1ll[8] else lIlIiIlIiIIII1i1IIIiI = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[7]] end if lIIiIIli1i1liliiIi1 <= lIlIiIlIiIIII1i1IIIiI ~= (liiIIllIlIiIl11i1ll[10] ~= 0) then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill + 1 end elseif not not iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] == (liiIIllIlIiIl11i1ll[7] == 0) then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill + 1 end elseif iiiIlliIIl1ilIl1iil < 3 then if iiiIlliIIl1ilIl1iil < 1 then if liiIIllIlIiIl11i1ll[7] == 125 then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill - 1 ilI1IIi111liII11iil[lIl11lll1IiIliI1ilill] = { [3] = 11, [10] = (liiIIllIlIiIl11i1ll[10] - 11) % 256, [4] = (liiIIllIlIiIl11i1ll[4] - 11) % 256 } elseif liiIIllIlIiIl11i1ll[7] == 248 then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill - 1 ilI1IIi111liII11iil[lIl11lll1IiIliI1ilill] = { [3] = 13, [10] = (liiIIllIlIiIl11i1ll[10] - 39) % 256, [4] = (liiIIllIlIiIl11i1ll[4] - 39) % 256 } else IIIl1Iil11iIill1il1[liiIIllIlIiIl11i1ll[4]] = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] end elseif iiiIlliIIl1ilIl1iil == 2 then local lIIiIIli1i1liliiIi1, lIlIiIlIiIIII1i1IIIiI if liiIIllIlIiIl11i1ll[6] then lIIiIIli1i1liliiIi1 = liiIIllIlIiIl11i1ll[2] else lIIiIIli1i1liliiIi1 = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[4]] end if liiIIllIlIiIl11i1ll[5] then lIlIiIlIiIIII1i1IIIiI = liiIIllIlIiIl11i1ll[8] else lIlIiIlIiIIII1i1IIIiI = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[7]] end iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = lIIiIIli1i1liliiIi1 + lIlIiIlIiIIII1i1IIIiI else iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = liiIIllIlIiIl11i1ll[4] ~= 0 if liiIIllIlIiIl11i1ll[7] ~= 0 then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill + 1 end end elseif iiiIlliIIl1ilIl1iil >= 4 then if iiiIlliIIl1ilIl1iil == 5 then local l11l1l1Ili11i1Iilll = liiIIllIlIiIl11i1ll[10] local illiI1iI11li1I1i1II = liiIIllIlIiIl11i1ll[4] local Iilll1liiI1liilllIl = liiIIllIlIiIl11i1ll[7] local i1iIliiI11I1iIlIl1I, lIlI1ll1Iil1liiIi1iii, Iii1i1Ii1IIl1l1II1I if illiI1iI11li1I1i1II ~= 1 then if illiI1iI11li1I1i1II ~= 0 then lIlI1ll1Iil1liiIi1iii = l11l1l1Ili11i1Iilll + illiI1iI11li1I1i1II - 1 else lIlI1ll1Iil1liiIi1iii = lIllIi1lIiiI1l1l1II1l end lIlI1ll1Iil1liiIi1iii, i1iIliiI11I1iIlIl1I = lIlI1Iii1iIliilIIIi1I(iIIiIlliIiI1lIl1I1I[l11l1l1Ili11i1Iilll](Iii1IIlIli1iiii1II1(iIIiIlliIiI1lIl1I1I, l11l1l1Ili11i1Iilll + 1, lIlI1ll1Iil1liiIi1iii))) else lIlI1ll1Iil1liiIi1iii, i1iIliiI11I1iIlIl1I = lIlI1Iii1iIliilIIIi1I(iIIiIlliIiI1lIl1I1I[l11l1l1Ili11i1Iilll]()) end if Iilll1liiI1liilllIl ~= 1 then if Iilll1liiI1liilllIl ~= 0 then lIlI1ll1Iil1liiIi1iii = l11l1l1Ili11i1Iilll + Iilll1liiI1liilllIl - 2 lIllIi1lIiiI1l1l1II1l = lIlI1ll1Iil1liiIi1iii + 1 else lIlI1ll1Iil1liiIi1iii = lIlI1ll1Iil1liiIi1iii + l11l1l1Ili11i1Iilll - 1 lIllIi1lIiiI1l1l1II1l = lIlI1ll1Iil1liiIi1iii end Iii1i1Ii1IIl1l1II1I = 0 for iiII1Ilii1ii1I1IiIi = l11l1l1Ili11i1Iilll, lIlI1ll1Iil1liiIi1iii do Iii1i1Ii1IIl1l1II1I = Iii1i1Ii1IIl1l1II1I + 1 iIIiIlliIiI1lIl1I1I[iiII1Ilii1ii1I1IiIi] = i1iIliiI11I1iIlIl1I[Iii1i1Ii1IIl1l1II1I] end else lIllIi1lIiiI1l1l1II1l = l11l1l1Ili11i1Iilll - 1 end for iiII1Ilii1ii1I1IiIi = lIllIi1lIiiI1l1l1II1l + 1, lIlillII1liiIiilll1iI do iIIiIlliIiI1lIl1I1I[iiII1Ilii1ii1I1IiIi] = nil end else iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = Ii1llI1I1lIliI1lIII[liiIIllIlIiIl11i1ll[9]] end elseif liiIIllIlIiIl11i1ll[7] == 82 then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill - 1 ilI1IIi111liII11iil[lIl11lll1IiIliI1ilill] = { [3] = 0, [10] = (liiIIllIlIiIl11i1ll[10] - 1) % 256, [4] = (liiIIllIlIiIl11i1ll[4] - 1) % 256 } else iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = not iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[4]] end elseif iiiIlliIIl1ilIl1iil >= 18 then if iiiIlliIIl1ilIl1iil >= 21 then if iiiIlliIIl1ilIl1iil >= 23 then if iiiIlliIIl1ilIl1iil == 24 then local lIIiIIli1i1liliiIi1, lIlIiIlIiIIII1i1IIIiI if liiIIllIlIiIl11i1ll[6] then lIIiIIli1i1liliiIi1 = liiIIllIlIiIl11i1ll[2] else lIIiIIli1i1liliiIi1 = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[4]] end if liiIIllIlIiIl11i1ll[5] then lIlIiIlIiIIII1i1IIIiI = liiIIllIlIiIl11i1ll[8] else lIlIiIlIiIIII1i1IIIiI = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[7]] end iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]][lIIiIIli1i1liliiIi1] = lIlIiIlIiIIII1i1IIIiI else lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill + (liiIIllIlIiIl11i1ll[1] - lIlIl1liI11l1i1li111l) end elseif iiiIlliIIl1ilIl1iil == 22 then local IiliI11l1iiI1iii1i1 = lIlll1il11iIIiIIII1ll[liiIIllIlIiIl11i1ll[1]] local II1iil1lIi1iIl1l11i = {} if IiliI11l1iiI1iii1i1[iiIlII111ii1Il1i1li] > 0 then do local lIlIIiI1lI111lIlI1iil = {} II1iil1lIi1iIl1l11i = IIiillI1IiII11Iill1({}, { __index = function(iilil1111iliii1i1Il, iIl11iil111i1llllll) local lIil11iIlil1l1II1l1 = lIlIIiI1lI111lIlI1iil[iIl11iil111i1llllll] return lIil11iIlil1l1II1l1[1][lIil11iIlil1l1II1l1[2]] end, __newindex = function(iilil1111iliii1i1Il, iIl11iil111i1llllll, lIii1liIII1l1lllii1) local lIil11iIlil1l1II1l1 = lIlIIiI1lI111lIlI1iil[iIl11iil111i1llllll] lIil11iIlil1l1II1l1[1][lIil11iIlil1l1II1l1[2]] = lIii1liIII1l1lllii1 end }) for iiII1Ilii1ii1I1IiIi = 1, IiliI11l1iiI1iii1i1[iiIlII111ii1Il1i1li] do local iIlIl1I11II1I1lI1ll = ilI1IIi111liII11iil[lIl11lll1IiIliI1ilill] if iIlIl1I11II1I1lI1ll[lIlillIIiI1li1lllili1] == iI1iii11liI11i11iIl then lIlIIiI1lI111lIlI1iil[iiII1Ilii1ii1I1IiIi - 1] = { iIIiIlliIiI1lIl1I1I, iIlIl1I11II1I1lI1ll[iI111I1lI1iIiillIli] } elseif iIlIl1I11II1I1lI1ll[lIlillIIiI1li1lllili1] == lIl11illIl1l1IIlI11I1 then lIlIIiI1lI111lIlI1iil[iiII1Ilii1ii1I1IiIi - 1] = { IIIl1Iil11iIill1il1, iIlIl1I11II1I1lI1ll[iI111I1lI1iIiillIli] } end lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill + 1 end if not lIiiilI1lli11IIl11l[iIIiIlliIiI1lIl1I1I] then lIiiilI1lli11IIl11l[iIIiIlliIiI1lIl1I1I] = {lIlIIiI1lI111lIlI1iil} else lIl1i1i1lil1llii1IiII(lIiiilI1lli11IIl11l[iIIiIlliIiI1lIl1I1I], lIlIIiI1lI111lIlI1iil) end end end local II111iiI1illIlil1I1 = l1I1Ii1I1iI1llIIl1l(IiliI11l1iiI1iii1i1, Ii1llI1I1lIliI1lIII, II1iil1lIi1iIl1l11i) iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = II111iiI1illIlil1I1 else Ii1llI1I1lIliI1lIII[liiIIllIlIiIl11i1ll[9]] = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] end elseif iiiIlliIIl1ilIl1iil < 19 then local lIIiIIli1i1liliiIi1, lIlIiIlIiIIII1i1IIIiI if liiIIllIlIiIl11i1ll[6] then lIIiIIli1i1liliiIi1 = liiIIllIlIiIl11i1ll[2] else lIIiIIli1i1liliiIi1 = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[4]] end if liiIIllIlIiIl11i1ll[5] then lIlIiIlIiIIII1i1IIIiI = liiIIllIlIiIl11i1ll[8] else lIlIiIlIiIIII1i1IIIiI = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[7]] end iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = lIIiIIli1i1liliiIi1 * lIlIiIlIiIIII1i1IIIiI elseif iiiIlliIIl1ilIl1iil == 20 then iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[4]] elseif liiIIllIlIiIl11i1ll[7] == 25 then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill - 1 ilI1IIi111liII11iil[lIl11lll1IiIliI1ilill] = { [3] = 7, [10] = (liiIIllIlIiIl11i1ll[10] - 247) % 256, [7] = (liiIIllIlIiIl11i1ll[4] - 247) % 256 } else local l11l1l1Ili11i1Iilll = liiIIllIlIiIl11i1ll[10] local lI1llliIIiiilII11lI = liiIIllIlIiIl11i1ll[4] local Iiill1IliIiI11liii1 = lI1llliIIiiilII11lI > 0 and lI1llliIIiiilII11lI - 1 or l1III1liI1IIlIIi1l1 - Il1lII1lll1lIllliiI if Iiill1IliIiI11liii1 < 0 then Iiill1IliIiI11liii1 = -1 end for iiII1Ilii1ii1I1IiIi = l11l1l1Ili11i1Iilll, l11l1l1Ili11i1Iilll + Iiill1IliIiI11liii1 do iIIiIlliIiI1lIl1I1I[iiII1Ilii1ii1I1IiIi] = illiI1iI11li1I1i1II[Il1lII1lll1lIllliiI + (iiII1Ilii1ii1I1IiIi - l11l1l1Ili11i1Iilll) + 1] end if lI1llliIIiiilII11lI == 0 then lIllIi1lIiiI1l1l1II1l = l11l1l1Ili11i1Iilll + Iiill1IliIiI11liii1 for iiII1Ilii1ii1I1IiIi = lIllIi1lIiiI1l1l1II1l + 1, lIlillII1liiIiilll1iI do iIIiIlliIiI1lIl1I1I[iiII1Ilii1ii1I1IiIi] = nil end end end elseif iiiIlliIIl1ilIl1iil >= 15 then if iiiIlliIIl1ilIl1iil >= 16 then if iiiIlliIIl1ilIl1iil == 17 then local l11l1l1Ili11i1Iilll = liiIIllIlIiIl11i1ll[10] local Ili11l1l11IIilillIl = l11l1l1Ili11i1Iilll + 2 local iI1Iill11ii1lIllllI = { iIIiIlliIiI1lIl1I1I[l11l1l1Ili11i1Iilll](iIIiIlliIiI1lIl1I1I[l11l1l1Ili11i1Iilll + 1], iIIiIlliIiI1lIl1I1I[l11l1l1Ili11i1Iilll + 2]) } for iiII1Ilii1ii1I1IiIi = 1, liiIIllIlIiIl11i1ll[7] do iIIiIlliIiI1lIl1I1I[Ili11l1l11IIilillIl + iiII1Ilii1ii1I1IiIi] = iI1Iill11ii1lIllllI[iiII1Ilii1ii1I1IiIi] end if iIIiIlliIiI1lIl1I1I[l11l1l1Ili11i1Iilll + 3] ~= nil then iIIiIlliIiI1lIl1I1I[l11l1l1Ili11i1Iilll + 2] = iIIiIlliIiI1lIl1I1I[l11l1l1Ili11i1Iilll + 3] else lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill + 1 end elseif liiIIllIlIiIl11i1ll[7] == 185 then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill - 1 ilI1IIi111liII11iil[lIl11lll1IiIliI1ilill] = { [3] = 12, [10] = (liiIIllIlIiIl11i1ll[10] - 62) % 256, [4] = (liiIIllIlIiIl11i1ll[4] - 62) % 256 } elseif liiIIllIlIiIl11i1ll[7] == 8 then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill - 1 ilI1IIi111liII11iil[lIl11lll1IiIliI1ilill] = { [3] = 17, [10] = (liiIIllIlIiIl11i1ll[10] - 218) % 256, [7] = (liiIIllIlIiIl11i1ll[4] - 218) % 256 } else for iiII1Ilii1ii1I1IiIi = liiIIllIlIiIl11i1ll[10], liiIIllIlIiIl11i1ll[4] do iIIiIlliIiI1lIl1I1I[iiII1Ilii1ii1I1IiIi] = nil end end else local lIlIiIlIiIIII1i1IIIiI if liiIIllIlIiIl11i1ll[5] then lIlIiIlIiIIII1i1IIIiI = liiIIllIlIiIl11i1ll[8] else lIlIiIlIiIIII1i1IIIiI = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[7]] end iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[4]][lIlIiIlIiIIII1i1IIIiI] end elseif iiiIlliIIl1ilIl1iil >= 13 then if iiiIlliIIl1ilIl1iil == 14 then iIIiIlliIiI1lIl1I1I[liiIIllIlIiIl11i1ll[10]] = liiIIllIlIiIl11i1ll[9] else local I11IilIlIliIIi1l1II = liiIIllIlIiIl11i1ll[10] local ilI11III111li1lI11I = {} for ilIilli1Iiillllill1, lIlIIiI1lI111lIlI1iil in pairs(lIiiilI1lli11IIl11l[iIIiIlliIiI1lIl1I1I]) do for ilIilli1Iiillllill1, lIil11iIlil1l1II1l1 in pairs(lIlIIiI1lI111lIlI1iil) do if lIil11iIlil1l1II1l1[1] == iIIiIlliIiI1lIl1I1I and I11IilIlIliIIi1l1II <= lIil11iIlil1l1II1l1[2] then local ii1IiIiliI1ilII11i1 = lIil11iIlil1l1II1l1[2] if not ilI11III111li1lI11I[ii1IiIiliI1ilII11i1] then l1I1Ii1I1iI1llIIl1l(i1IIIiiI1lill1I111I, iIIiIlliIiI1lIl1I1I[ii1IiIiliI1ilII11i1]) ilI11III111li1lI11I[ii1IiIiliI1ilII11i1] = #i1IIIiiI1lill1I111I end lIil11iIlil1l1II1l1[1] = i1IIIiiI1lill1I111I lIil11iIlil1l1II1l1[2] = ilI11III111li1lI11I[ii1IiIiliI1ilII11i1] end end end end elseif liiIIllIlIiIl11i1ll[7] == 21 then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill - 1 ilI1IIi111liII11iil[lIl11lll1IiIliI1ilill] = { [3] = 20, [10] = (liiIIllIlIiIl11i1ll[10] - 119) % 256, [4] = (liiIIllIlIiIl11i1ll[4] - 119) % 256 } elseif liiIIllIlIiIl11i1ll[7] == 140 then lIl11lll1IiIliI1ilill = lIl11lll1IiIliI1ilill - 1 ilI1IIi111liII11iil[lIl11lll1IiIliI1ilill] = { [3] = 16, [10] = (liiIIllIlIiIl11i1ll[10] - 237) % 256, [4] = (liiIIllIlIiIl11i1ll[4] - 237) % 256 } else lIiiilI1lli11IIl11l[iIIiIlliIiI1lIl1I1I] = nil local l11l1l1Ili11i1Iilll = liiIIllIlIiIl11i1ll[10] local Ill11I11IIil11l1liI = liiIIllIlIiIl11i1ll[4] if Ill11I11IIil11l1liI == 1 then return true end local lIlI1ll1Iil1liiIi1iii = l11l1l1Ili11i1Iilll + Ill11I11IIil11l1liI - 2 if Ill11I11IIil11l1liI == 0 then lIlI1ll1Iil1liiIi1iii = lIllIi1lIiiI1l1l1II1l end return true, l11l1l1Ili11i1Iilll, lIlI1ll1Iil1liiIi1iii end end end local I11I1ilIl1Il1liiIli, illil1ii1Iilllil111, I11IilIlIliIIi1l1II, IlIIIiliIIIlII111iI = llI1lilIiiIli1lIIll(Iii1i1Ii1IIl1l1II1I) if I11I1ilIl1Il1liiIli then if I11IilIlIliIIi1l1II then return Iii1IIlIli1iiii1II1(iIIiIlliIiI1lIl1I1I, I11IilIlIliIIi1l1II, IlIIIiliIIIlII111iI) end else iiliIllIIlllllI1ill("Luraph Script:" .. (ii11liii1liliill1ll[lIl11lll1IiIliI1ilill - 1] or "") .. ": " .. lIl11IIiIIl11lllI1IIi(illil1ii1Iilllil111), 0) end end i1llI11llll1i1I1ll1(lIliIlIl1IlIiI1liliII, Ii1llI1I1lIliI1lIII) return lIliIlIl1IlIiI1liliII end local ilI11III111li1lI11I = I1l1lIliiIi1iI1iil1() return l1I1Ii1I1iI1llIIl1l(ilI11III111li1lI11I, Ii1llI1I1lIliI1lIII)() end IIllI111ilIliIli1ii("LPH!", ll1lliIII1illliIlIl()) 
